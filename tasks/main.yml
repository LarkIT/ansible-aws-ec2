# roles/aws-ec2/tasks/main.yml
# Create EC2 instance and depenencies
---
- name: Lookup EC2 subnet info
  ec2_vpc_subnet_info:
    region: "{{ aws_region }}"
    filters:
      "tag:Name": "{{ ec2_subnet_name }}"
  register: subnet_info

- name: Create security group for EC2 instance 
  ec2_group:
    state: "{{ ec2_state }}"
    name: "{{ ec2_name }}-sg"
    description: "Security group for {{ ec2_name }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ aws_vpc_id }}"
    purge_rules: "{{ ec2_sg_purge_ingress_rules }}"
    rules: "{{ ec2_sg_ingress_rules }}"
    rules_egress: "{{ ec2_sg_egress_rules }}"
    tags: 
      Name : "{{ ec2_name }}-sg"

- name: Create EC2 instance
  ec2:
    region: "{{ aws_region }}"
    key_name: "{{ aws_vpc_key }}"
    instance_type: "{{ ec2_instance_type }}"
    assign_public_ip: "{{ ec2_assign_public_ip }}"
    image: "{{ ec2_image }}"
    wait: yes
    group: "{{ ec2_name }}-sg"
    exact_count: "{{ ec2_exact_count }}"
    vpc_subnet_id: "{{ subnet_info|json_query('subnets[0].subnet_id') }}"
    volumes: "{{ ec2_volumes }}"
    count_tag:
      Name: "{{ ec2_name }}"
    instance_tags:
      Name: "{{ ec2_name }}"
      AnsibleManaged: "True"

- name: Lookup EC2 info
  ec2_instance_info:
    region: "{{ aws_region }}"
    filters:
      "tag:Name": "{{ ec2_name }}"
  register: ec2_info

- debug:
    var: ec2_info

- debug: 
    var: ec2_info|json_query('instances[0].instance_id')

- name: List volumes attached to EC2 instance
  ec2_vol:
    region: "{{ aws_region }}"
    instance: "{{ ec2_info|json_query('instances[0].instance_id') }}"
    state: list
  register: volume_info

- debug:
    var: volume_info

- debug:
    var: volume_info|json_query('volumes[0].id')
  

- name: Tag EC2 instance root EBS volume
  ec2_tag:
    region: "{{ aws_region }}"
    resource: "{{ volume_info|json_query('volumes[0].id') }}"
    state: present
    tags:
      Name: "{{ ec2_name }}-root"

- name: Add EC2 instance private IP to internal DNS
  route53:
    private_zone: true
    state: present
    zone: "{{ ec2_private_ip_dns_zone }}"
    record: "{{ ec2_name }}.{{ ec2_private_ip_dns_zone }}"
    type: A
    value: "{{ ec2_info|json_query('instances[0].private_ip_address') }}"
    ttl: 3600
    overwrite: "{{ ec2_private_ip_dns_overwrite }}"
    wait: true
  when: ec2_configure_private_ip_dns

- name: Allocate and associate EIP
  ec2_eip:
    in_vpc: yes
    region: "{{ aws_region }}"
    device_id: "{{ ec2_info|json_query('instances[0].instance_id') }}"
    tag_name: Name
    tag_value: "{{ ec2_name }}-eip"
  when: ec2_allocate_eip

- name: Create or update Route 53 record 
  route53:
    state: present
    zone: "{{ ec2_eip_dns_zone }}"
    record: "{{ ec2_eip_dns_name }}"
    type: A
    value: "{{ ec2_info|json_query('instances[0].public_ip_address') }}"
    ttl: 3600
    overwrite: "{{ ec2_eip_dns_overwrite }}"
    wait: true
  when: ec2_configure_eip_dns

# roles/aws-ec2/tasks/main.yml
# Create EC2 instance and depenencies
---
- name: Lookup EC2 subnet info
  ec2_vpc_subnet_info:
    filters:
      "tag:Name": "{{ ec2_subnet_name }}"
  register: subnet_info

- name: Create security group for EC2 instance 
  ec2_group:
    state: "{{ ec2_state }}"
    name: "{{ ec2_name }}-sg"
    description: "Security group for {{ ec2_name }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ vpc_id }}"
    purge_rules: False
    rules_egress:
      - proto: all
        from_port: 0
        to_port: 65535
        cidr_ip: 0.0.0.0/0
    tags: 
      Name : "{{ ec2_name }}-sg"

- name: Create EC2 instance
  ec2:
    region: "{{ aws_region }}"
    key_name: "{{ vpc_key }}"
    instance_type: "{{ ec2_instance_type }}"
    assign_public_ip: "{{ ec2_assign_public_ip }}"
    image: "{{ ec2_image }}"
    wait: yes
    group: "{{ ec2_name }}-sg"
    exact_count: "{{ ec2_exact_count }}"
    vpc_subnet_id: "{{ subnet_info|json_query('subnets[0].subnet_id') }}"
    volumes:
      - device_name: /dev/sda1
        volume_size: "{{ ec2_root_volume_size }}"
        delete_on_termination: "{{ ec2_root_volume_delete_on_termination }}"
        encrypted: True
    count_tag:
      Name: "{{ ec2_name }}"
    instance_tags:
      Name: "{{ ec2_name }}"

- block:
    - name: Lookup EC2 info
      ec2_instance_info:
        filters:
          "tag:Name": "{{ ec2_name }}"
      register: ec2_info
    - name: Allocate and associate EIP
      ec2_eip:
        in_vpc: yes
        region: "{{ aws_region }}"
        device_id: "{{ ec2_info|json_query('instances[0].instance_id') }}"
        tag_name: Name
        tag_value: "{{ ec2_name }}-eip"
  when: ec2_allocate_eip


- block:
    - name: Lookup EIP info
      ec2_eip_info:
        filters:
          "tag:Name": "{{ ec2_name }}-eip"
      register: eip_info
    - name: Create or update Route 53 record 
      route53:
        state: present
        zone: "{{ r53_hosted_zone_name }}"
        record: "{{ r53_record }}"
        type: A
        value: "{{ alb_info|json_query('load_balancers[0].dns_name') }}"
        alias: True
        alias_hosted_zone_id: "{{ alb_info|json_query('load_balancers[0].canonical_hosted_zone_id') }}"
        overwrite: "{{ r53_overwrite }}"
  when: ec2_configure_dns
